// Code generated by "stringer -type=tokenType"; DO NOT EDIT.

package bcl

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[tEOF-0]
	_ = x[tERR-1]
	_ = x[tINT-2]
	_ = x[tFLOAT-3]
	_ = x[tSTR-4]
	_ = x[tIDENT-5]
	_ = x[tVAR-6]
	_ = x[tDEF-7]
	_ = x[tEVAL-8]
	_ = x[tPRINT-9]
	_ = x[tTRUE-10]
	_ = x[tFALSE-11]
	_ = x[tNIL-12]
	_ = x[tEQ-13]
	_ = x[tLCURLY-14]
	_ = x[tRCURLY-15]
	_ = x[tLPAREN-16]
	_ = x[tRPAREN-17]
	_ = x[tOR-18]
	_ = x[tAND-19]
	_ = x[tNOT-20]
	_ = x[tEE-21]
	_ = x[tBE-22]
	_ = x[tLT-23]
	_ = x[tLE-24]
	_ = x[tGT-25]
	_ = x[tGE-26]
	_ = x[tPLUS-27]
	_ = x[tMINUS-28]
	_ = x[tSTAR-29]
	_ = x[tSLASH-30]
	_ = x[tSEMICOLON-31]
	_ = x[tMAX-32]
}

const _tokenType_name = "tEOFtERRtINTtFLOATtSTRtIDENTtVARtDEFtEVALtPRINTtTRUEtFALSEtNILtEQtLCURLYtRCURLYtLPARENtRPARENtORtANDtNOTtEEtBEtLTtLEtGTtGEtPLUStMINUStSTARtSLASHtSEMICOLONtMAX"

var _tokenType_index = [...]uint8{0, 4, 8, 12, 18, 22, 28, 32, 36, 41, 47, 52, 58, 62, 65, 72, 79, 86, 93, 96, 100, 104, 107, 110, 113, 116, 119, 122, 127, 133, 138, 144, 154, 158}

func (i tokenType) String() string {
	if i < 0 || i >= tokenType(len(_tokenType_index)-1) {
		return "tokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _tokenType_name[_tokenType_index[i]:_tokenType_index[i+1]]
}
