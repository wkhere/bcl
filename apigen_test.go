// Code generated by "./test.py generate"; DO NOT EDIT.

package bcl

func Example_i0() {
	Interpret([]byte(`eval "expr that is discarded"`))
	// Output:
}

func Example_i1() {
	Interpret([]byte(`var a; print not a`))
	// Output:
	// true
}

func Example_i2() {
	Interpret([]byte(`var a; print a==nil`))
	// Output:
	// true
}

func Example_i3() {
	Interpret([]byte(`var a=1; eval a=nil; print a==nil`))
	// Output:
	// true
}

func Example_i4() {
	Interpret([]byte(`print 1+1`))
	// Output:
	// 2
}

func Example_i5() {
	Interpret([]byte(`print 1+2.14`))
	// Output:
	// 3.14
}

func Example_i6() {
	Interpret([]byte(`print 123/2-50+2*8`))
	// Output:
	// 27
}

func Example_i7() {
	Interpret([]byte(`print 1-2`))
	// Output:
	// -1
}

func Example_i8() {
	Interpret([]byte(`print 1--2`))
	// Output:
	// 3
}

func Example_i9() {
	Interpret([]byte(`print 1- +1`))
	// Output:
	// 0
}

func Example_i10() {
	Interpret([]byte(`print 1+ +1`))
	// Output:
	// 2
}

func Example_i11() {
	Interpret([]byte(`print ---10`))
	// Output:
	// -10
}

func Example_i12() {
	Interpret([]byte(`print not 1>3`))
	// Output:
	// true
}

func Example_i13() {
	Interpret([]byte(`print 1<2 and 0 or "whatever"`))
	// Output:
	// 0
}

func Example_i14() {
	Interpret([]byte(`print 1>2 or true and 42`))
	// Output:
	// 42
}

func Example_i15() {
	Interpret([]byte(`print 1<10/5 and 127*-1+154`))
	// Output:
	// 27
}

func Example_i16() {
	Interpret([]byte(`print "q"*2`))
	// Output:
	// qq
}

func Example_i17() {
	Interpret([]byte(`print "q"+"x"`))
	// Output:
	// qx
}

func Example_i18() {
	Interpret([]byte(`print "q"+3`))
	// Output:
	// q3
}

func Example_i19() {
	Interpret([]byte(`print "q"+3.14`))
	// Output:
	// q3.14
}

func Example_i20() {
	Interpret([]byte(`var a=100; var b=a-90; print -b`))
	// Output:
	// -10
}

func Example_i21() {
	Interpret([]byte(`var a=1; var b=2; print a+b`))
	// Output:
	// 3
}

func Example_i22() {
	Interpret([]byte(`var a=1; eval a=a+1; print a`))
	// Output:
	// 2
}

func Example_i23() {
	Interpret([]byte(`var a=1; print a=a+1`))
	// Output:
	// 2
}

func Example_i24() {
	Interpret([]byte(`def blk {print TYPE}`))
	// Output:
	// blk
}

func Example_i25() {
	Interpret([]byte(`def blk "foo" {print TYPE+"."+NAME}`))
	// Output:
	// blk.foo
}

func Example_i26() {
	Interpret([]byte(`var a=1; def blk {print TYPE}`))
	// Output:
	// blk
}

func Example_i27() {
	Interpret([]byte(`print 1; def blk {print TYPE}`))
	// Output:
	// 1
	// blk
}

func Example_i28() {
	Interpret([]byte(`var a=1; def blk {print TYPE+a}`))
	// Output:
	// blk1
}

func Example_i29() {
	Interpret([]byte(`def blk {var a=1; print TYPE+a}`))
	// Output:
	// blk1
}

func Example_i30() {
	Interpret([]byte(`var x=1; def blk {var a=1+x; print TYPE+a}`))
	// Output:
	// blk2
}

func Example_i31() {
	Interpret([]byte(`def blk {var a=1; var b=2; print TYPE+(a+b)}`))
	// Output:
	// blk3
}

func Example_i32() {
	Interpret([]byte(`var x=5; def blk {var a=1; var b=2; print TYPE+(a+b+x)}`))
	// Output:
	// blk8
}

func Example_i33() {
	Interpret([]byte(`def b1{var x=1; def b2 {var a=2; print TYPE+(a+x)}}`))
	// Output:
	// b23
}

func Example_i34() {
	Interpret([]byte(`var a=5; def blk {var a=a+1; print TYPE+a}`))
	// Output:
	// blk6
}

func Example_i35() {
	Interpret([]byte(`def b1{var a=5; def b2 {var a=a+1; print TYPE+a} print TYPE+a}`))
	// Output:
	// b26
	// b15
}

func Example_i36() {
	Interpret([]byte(`def b1{var a=5; def b2 {eval a=a+1; print TYPE+a} print TYPE+a}`))
	// Output:
	// b26
	// b16
}

func Example_i37() {
	Interpret([]byte(`def b1{ print TYPE; def b2{print TYPE} }; def b3{print TYPE}`))
	// Output:
	// b1
	// b2
	// b3
}

func Example_i38() {
	Interpret([]byte(`var a; var b; eval a=1+(b=2); print a`))
	// Output:
	// 3
}

func Example_i39() {
	Interpret([]byte(`var a; var b; print a=1+(b=2)`))
	// Output:
	// 3
}

func Example_i40() {
	Interpret([]byte(`def x {42}`))
	// Output:
}

func Example_i41() {
	Interpret([]byte(`def x {var x=42; x+1; print x}`))
	// Output:
	// 42
}

func Example_i42() {
	Interpret([]byte(`def x {a=1+(b=2); print a}`))
	// Output:
	// 3
}

func Example_i43() {
	Interpret([]byte(`def x {print a=1+(b=2)}`))
	// Output:
	// 3
}
