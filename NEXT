+ make yacc tokens unexported
+ handle division by zero

+ add line info from lex to eval errors

more on errors:
- return all errors (modulo parser sync)
- when it's done, consider adding BCL to github.com/Boeing/config-file-validator

- bin ops: 
	== !=      # for int float str bool
    < > <= >=  # for int float str
 	and or 	   # for bool, short-circuit

- builtin functions:
	- getenv(key)
	- cmd(...) to run commands and catch the output!
	- simple type conversion
	- consider replacing cmd & type conversions with sigils

- compatibility with HCL-style resources, which look like:
  resource "type" "name" .... { }

- fix: when a field is defined more than once, only the last clause
  is evaluated; should evaluate all then overwrite with the last one
  (1. current behavior unintuitive, 2. prep for side-effect exprs like ++i)

- consider fields to be resolvable like vars in the scope of the current block;
  then they would act like local vars

- nested structs/dicts; design carefully

- ability to use reference to other block's field, possibly nested

